<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

    <bean id="retryFailedEmailPolicy" class="org.apache.camel.routepolicy.quartz.CronScheduledRoutePolicy">
        <property name="routeSuspendTime" value="${email.service.retry.suspend.time}"/>
        <property name="routeResumeTime" value="${email.service.retry.resume.time}"/>
    </bean>

    <camel:camelContext id="emailServiceCamel" errorHandlerRef="dlqErrorHandler">
        <camel:errorHandler id="dlqErrorHandler" deadLetterUri="direct:errors"
                            type="DeadLetterChannel" useOriginalMessage="true"/>

        <camel:errorHandler id="smtpHandler" deadLetterUri="direct:retry"
                            type="DeadLetterChannel" useOriginalMessage="true">
            <camel:redeliveryPolicy maximumRedeliveries="${email.service.max.redeliveries}"
                                    useExponentialBackOff="${email.service.use.exponential.back.off}"/>
        </camel:errorHandler>

        <camel:endpoint id="emailIn" uri="jms:queue:${email.service.in.queue}"/>
        <camel:endpoint id="DLQ" uri="jms:queue:${email.service.errors.queue}?jmsMessageType=Text"/>
        <camel:endpoint id="retryQueue" uri="jms:queue:${email.service.retry.queue}?jmsMessageType=Text"/>
        <camel:endpoint id="failureUri" uri="direct:errors"/>
        <camel:endpoint id="retryUri" uri="direct:retry"/>

        <camel:dataFormats>
            <camel:xstream id="xstream-default"/>
        </camel:dataFormats>

        <camel:onException>
            <camel:exception>org.burgers.email.service.TemplateProcessingException</camel:exception>
            <camel:exception>org.burgers.email.service.ValidationException</camel:exception>
            <camel:handled>
                <camel:constant>true</camel:constant>
            </camel:handled>
            <camel:to ref="failureUri"/>
        </camel:onException>

        <camel:onException>
            <camel:exception>org.springframework.mail.MailSendException</camel:exception>
            <camel:handled>
                <camel:constant>true</camel:constant>
            </camel:handled>
            <camel:to ref="retryUri"/>
        </camel:onException>

        <camel:route id="emailProcessing">
            <camel:from ref="emailIn"/>

            <camel:unmarshal ref="xstream-default"/>
            <camel:bean id="validationManagerBean" ref="validationManager" method="validate"/>
            <camel:bean id="emailSenderBean" ref="emailSender" method="sendMessage"/>
        </camel:route>

        <camel:route id="failureRoute">
            <camel:from ref="failureUri"/>
            <camel:to uri="log:org.burgers.email?level=ERROR&amp;showAll=true"/>
            <camel:to ref="DLQ"/>
        </camel:route>

        <camel:route id="retryRoute">
            <camel:from ref="retryUri"/>
            <camel:to uri="log:org.burgers.email?level=ERROR&amp;showAll=true"/>
            <camel:to ref="retryQueue"/>
        </camel:route>

        <camel:route id="retryEmailProcessing" autoStartup="true" routePolicyRef="retryFailedEmailPolicy">
            <camel:from ref="retryQueue"/>
            <camel:to ref="emailIn"/>
        </camel:route>

    </camel:camelContext>

</beans>